#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Setup PATH
# https://superuser.com/a/598924/258915
typeset -U path
path=($HOME/.local/my_bin
      $HOME/.local/bin
      $path)
export PATH

# Spaceship theme customization
SPACESHIP_HOST_SHOW='always'
SPACESHIP_USER_SHOW='true'
SPACESHIP_PROMPT_ORDER=(
  time          # Time stampts section
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  hg            # Mercurial section (hg_branch  + hg_status)
  #package       # Package version
  #node          # Node.js section
  #ruby          # Ruby section
  #elixir        # Elixir section
  #xcode         # Xcode section
  #swift         # Swift section
  golang        # Go section
  #php           # PHP section
  #rust          # Rust section
  #haskell       # Haskell Stack section
  #julia         # Julia section
  docker        # Docker section
  aws           # Amazon Web Services section
  venv          # virtualenv section
  #conda         # conda virtualenv section
  pyenv         # Pyenv section
  #dotnet        # .NET section
  #ember         # Ember.js section
  kubecontext   # Kubectl context section
  exec_time     # Execution time
  line_sep      # Line break
  #battery       # Battery level and status
  vi_mode       # Vi-mode indicator
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)

# disable AUTO_CD
unsetopt AUTO_CD

# Setup .dircolors
if [ -s "$HOME/.dir_colors" ]; then
  eval "$(dircolors -b $HOME/.dir_colors)"
fi

# kubernetes
if [ $commands[minikube] ]; then
    alias mk="minikube"
fi
if [ $commands[kubectl] ]; then
    source <(kubectl completion zsh);
    alias kc="kubectl"
    alias kcg="kubectl get"
    alias kcl="kubectl list"
    alias kcd="kubectl describe"
    alias kkc="kubectl --namespace kube-system"
    alias kkcg="kubectl --namespace kube-system get"
    alias kkcl="kubectl --namespace kube-system list"
    alias kkcd="kubectl --namespace kube-system describe"
fi
if [ $commands[kubeadm] ]; then
    alias ka="kubeadm"
fi

# virsh
if [ $commands[virsh] ]; then
    alias vrs="virsh --connect qemu:///system"
fi

# direnv
if [ $commands[direnv] ]; then
    eval "$(direnv hook zsh)"
fi

# NTFY notifications
if [ $commands[ntfy] ]; then
    eval "$(ntfy shell-integration)"
fi

# ffind
if [ $commands[ffind] ]; then
    alias ff='ffind'
fi

# fzf
if [ $commands[fzf] ]; then
    source /usr/share/fzf/key-bindings.zsh
    source /usr/share/fzf/completion.zsh
    export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
fi

# aliases
alias ls="${aliases[ls]:-ls} -v"    # XXX ZSH ONLY!!! Make ls use natural sort
#alias sudo='sudo '                  # Let the aliases work with sudo too!

alias ping1='ping -c3 1.1.1.1'
alias ping8='ping -c3 8.8.8.8'
alias pingg='ping -c3 www.google.com'
alias mmv='noglob zmv -W'

alias v='gvim'
alias vv='v $(fzf)'

alias gtar='tar pcvzf'
alias btar='tar pcvjf'
alias untar='tar xvf'
alias ungtar='tar xvzf'
alias unbtar='tar xvjf'

alias cputemp="watch -n 1 -d sensors"

# Journalctl aliases
alias jctl=journalctl
alias jspy='jctl -f'

# Systemctl aliases
alias reload='sudo systemctl reload'
alias restart='sudo systemctl restart'
alias start='sudo systemctl start'
alias sctl='sudo systemctl'
alias usctl='systemctl --user'
alias status='systemctl -l status'
alias stop='sudo systemctl stop'

# docker
alias dc='docker'
alias dcc='docker container'
alias dci='docker image'
alias dcv='docker volume'
alias dcn='docker network'
alias dcmp='docker-compose'

## Python aliases
alias f="find ./ -name"
alias qg='qgit --all'
alias rmpyc="find ./ -name '*.pyc' -delete"
alias rmtex="find . -type f \( -name '*.aux' -o -name '*.glo' -o -name '*.idx' -o -name '*.log' -o -name '*.toc' -o -name '*.ist' -o -name '*.acn' -o -name '*.acr' -o -name '*.alg' -o -name '*.bbl' -o -name '*.blg' -o -name '*.dvi' -o -name '*.glg' -o -name '*.gls' -o -name '*.ilg' -o -name '*.ind' -o -name '*.lof' -o -name '*.lot' -o -name '*.maf' -o -name '*.mtc' -o -name '*.thm' -o -name '*.nav' -o -name '*.snm' -o -name '*.out' -o -name '*.synctex.gz' -o -name '*.mtc1' -name '*.bcf' -name '*.fls' -name '*.run.xml' \) -delete"
alias add_pygitignore='wget -O "./.gitignore" https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore'
alias add_envrc='echo layout python-venv python3 > .envrc'

### Useful commands

gdrive_download () {
    if (( $# < 2 )); then
        echo 'usage: gdrive_download url output_filename'
        return 1
    else
        url=$1
        filename=$2
    fi

    # extract the id from the url
    case "$url" in
        'https://drive.google.com/open?id='*) id=$(echo "$url" | awk -F'=|&' '{printf"%s",$2}');;
        'https://drive.google.com/file/d/'*|'https://docs.google.com/file/d/'*) id=$(echo "$url" | awk -F'/' '{printf"%s",$6}');;
    esac

    # download the file
    CONFIRM=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate "https://docs.google.com/uc?export=download&id=$1" -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')
    wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&confirm=$CONFIRM&id=$id" -O $filename
    rm -rf /tmp/cookies.txt
}

update_awesome_menu() {
    if [ $commands[xdg_menu] ]; then
        rm -rf ~/.config/awesome/archmenu.lua
        xdg_menu --format awesome --root-menu /etc/xdg/menus/arch-applications.menu > ~/.config/awesome/archmenu.lua
    else
        echo "Please install xdg-menu (archlinux-xdg-menu)."
    fi
}

### Append folders to PATH
export R_LIBS="$HOME/.R"
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share
export XDG_RUNTIME_DIR=/tmp/$USER    # this directory is created in .zprofile
export JAVA_OPTS="-Xmx2048M -Xms32M"
export GOPATH=~/Prog/go

# Ruby
if [ $commands[ruby] ]; then
  export GEM_HOME=$(ruby -e 'print Gem.user_dir')
fi

# Ensure that the directories exist
mkdir -p $XDG_DATA_HOME $XDG_RUNTIME_DIR $XDG_CACHE_HOME $XDG_CONFIG_HOME

# Ipython and Jupyter
# Both projects have decided not to follow XDG.
# To circumvent this we need to add some ENV variables
# https://ipython.readthedocs.io/en/7.2.0/development/config.html#configuration-file-location
# https://github.com/jupyter/notebook/issues/1355#
export IPYTHONDIR=${XDG_CONFIG_HOME:-$HOME/.config}/ipython
export JUPYTER_CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/jupyter
# JUPYTERLAB_DIR defines where jupyter extensions are being installed.
export JUPYTERLAB_DIR=${JUPYTER_CONFIG_DIR}/lab/
alias i2="ipython2"
alias i3="ipython3"
alias jn="jupyter notebook"
alias jl="jupyter lab"

# Setup proper console colors
# https://github.com/chriskempson/base16-shell
theme="base16-gruvbox-dark-hard.sh"
if [ -f "${HOME}/.config/base16-shell/scripts/${theme}" ]; then
  source "${HOME}/.config/base16-shell/scripts/${theme}"
else
  echo 'Please install https://github.com/chriskempson/base16-shell'
fi

# lock screen
if [ $commands[gnome-screensaver-command] ]; then
  alias lock='gnome-screensaver-command -l'
fi

