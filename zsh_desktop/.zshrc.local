#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Setup PATH
# https://superuser.com/a/598924/258915
typeset -U path
path=($HOME/.local/my_bin
      $HOME/.local/bin
      $path)
export PATH

# disable AUTO_CD
unsetopt AUTO_CD

# Setup .dircolors
if [ -s "$HOME/.dir_colors" ]; then
  eval "$(dircolors -b $HOME/.dir_colors)"
fi

# direnv
if [ $commands[direnv] ]; then
    eval "$(direnv hook zsh)"
fi

# NTFY notifications
if [ $commands[ntfy] ]; then
    eval "$(ntfy shell-integration)"
    export AUTO_NTFY_DONE_IGNORE="vim gvim screen tmux"
fi

# kubernetes
if [ $commands[kubectl] ]; then
    source <(kubectl completion ${0});
fi

# fzf
if [ $commands[fzf] ]; then
  # configure
  if [ $commands[bat] ]; then
    export FZF_DEFAULT_OPTS="--height 40% --reverse --border --preview 'bat --color=always --line-range :100 {}'"
  else
    export FZF_DEFAULT_OPTS="--height 40% --reverse --border --preview 'head -n100 {}'"
  fi
  # Use fd if it is available and fallback to ag
  if [ $commands[fd] ]; then
    export FZF_DEFAULT_COMMAND='fd --type f --color=never --hidden --follow --exclude .git --exclude .tox'
    export FZF_ALT_C_COMMAND='fd --type d --color=never --hidden --follow --exclude .git --exclude .tox'
  elif [ $commands[ag] ]; then
    export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git --ignore .tox -g ""'
  fi
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  # key bindings
  if [ -f /usr/share/fzf/key-bindings.zsh ]; then
    source /usr/share/fzf/key-bindings.zsh
    source /usr/share/fzf/completion.zsh
  elif [ -f "${HOME}"/.fzf/shell/key-bindings.zsh ]; then
    source "${HOME}"/.fzf/shell/key-bindings.zsh
    source "${HOME}"/.fzf/shell/completion.zsh
  else
    echo "couldn't find fzf key-bindings"
  fi
  # aliases
  alias vv='gvim $(fzf)'
fi

# zsh-only aliases
alias ls="${aliases[ls]:-ls} -v"    # XXX ZSH ONLY!!! Make ls use natural sort
alias mmv='noglob zmv -W'

# Ruby
if [ $commands[ruby] ]; then
  export GEM_HOME=$(ruby -e 'puts Gem.user_dir')
  export PATH="${PATH}":"${GEM_HOME}"/bin
fi


# common aliases
source ~/.shell_aliases

gdrive_download () {
    if (( $# < 2 )); then
        echo 'usage: gdrive_download url output_filename'
        return 1
    else
        url=$1
        filename=$2
    fi

    # extract the id from the url
    case "$url" in
        'https://drive.google.com/open?id='*) id=$(echo "$url" | awk -F'=|&' '{printf"%s",$2}');;
        'https://drive.google.com/file/d/'*|'https://docs.google.com/file/d/'*) id=$(echo "$url" | awk -F'/' '{printf"%s",$6}');;
    esac

    # download the file
    CONFIRM=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate "https://docs.google.com/uc?export=download&id=$1" -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')
    wget --load-cookies /tmp/cookies.txt "https://docs.google.com/uc?export=download&confirm=$CONFIRM&id=$id" -O $filename
    rm -rf /tmp/cookies.txt
}

update_awesome_menu() {
    if [ $commands[xdg_menu] ]; then
        rm -rf ~/.config/awesome/archmenu.lua
        xdg_menu --format awesome --root-menu /etc/xdg/menus/arch-applications.menu > ~/.config/awesome/archmenu.lua
    else
        echo "Please install xdg-menu (archlinux-xdg-menu)."
    fi
}

# XDG BASE directories
# https://wiki.archlinux.org/index.php/XDG_Base_Directory
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share
export XDG_RUNTIME_DIR=/var/run/user/$(id -u)
mkdir -p $XDG_DATA_HOME $XDG_CACHE_HOME $XDG_CONFIG_HOME

export R_LIBS="$HOME/.R"
export JAVA_OPTS="-Xmx2048M -Xms32M"
export GOPATH=~/Prog/go
export GOBIN=~/Prog/go/bin
export GOARCH=amd64
export GOOS=linux


export PYTHONSTARTUP=~/.pythonrc.py

# Ipython and Jupyter
# Both projects have decided not to follow XDG.
# To circumvent this we need to add some ENV variables
# https://ipython.readthedocs.io/en/7.2.0/development/config.html#configuration-file-location
# https://github.com/jupyter/notebook/issues/1355#
export IPYTHONDIR=${XDG_CONFIG_HOME:-$HOME/.config}/ipython
export JUPYTER_CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/jupyter
# JUPYTERLAB_DIR defines where jupyter extensions are being installed.
export JUPYTERLAB_DIR=${JUPYTER_CONFIG_DIR}/lab/

export GPG_TTY=$(tty)
